name: Claude Code Subagent Workflow

on:
  pull_request:
    types: [opened, synchronize, reopened]
  push:
    branches: [main, develop]
  workflow_dispatch:

jobs:
  database-review:
    name: Database Schema Review
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Review Database Changes
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # Use healthcare-database-expert subagent to review database changes
          echo "Reviewing database schema changes with healthcare-database-expert..."
          # Add Claude Code CLI commands here when available

  supabase-check:
    name: Supabase Configuration Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Validate Supabase Setup
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # Use supabase-specialist subagent to validate configuration
          echo "Validating Supabase configuration with supabase-specialist..."
          # Add Claude Code CLI commands here when available

  performance-analysis:
    name: Performance Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Analyze Performance Impact
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # Use nextjs-performance-optimizer subagent to analyze changes
          echo "Analyzing performance impact with nextjs-performance-optimizer..."
          # Add Claude Code CLI commands here when available

  test-coverage:
    name: Test Coverage Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Review Test Coverage
        env:
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
        run: |
          # Use test-automation-specialist subagent to review tests
          echo "Reviewing test coverage with test-automation-specialist..."
          # Add Claude Code CLI commands here when available

  # Traditional CI/CD steps
  lint-and-type-check:
    name: Lint and Type Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - run: npm ci
      - run: npm run lint || true
      - run: npm run type-check || true

  build:
    name: Build Application
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"

      - run: npm ci
      - run: npm run build
        env:
          NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
          NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
          ANTHROPIC_API_KEY: ${{ secrets.ANTHROPIC_API_KEY }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          RESEND_API_KEY: ${{ secrets.RESEND_API_KEY }}
          TWILIO_ACCOUNT_SID: ${{ secrets.TWILIO_ACCOUNT_SID }}
          TWILIO_AUTH_TOKEN: ${{ secrets.TWILIO_AUTH_TOKEN }}
          TWILIO_PHONE_NUMBER: ${{ secrets.TWILIO_PHONE_NUMBER }}
          RESEND_FROM_EMAIL: ${{ secrets.RESEND_FROM_EMAIL }}
          ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          SESSION_SECRET: ${{ secrets.SESSION_SECRET }}
          NEXT_PUBLIC_APP_URL: ${{ secrets.NEXT_PUBLIC_APP_URL }}
          NEXT_PUBLIC_BRAND_NAME: ${{ secrets.NEXT_PUBLIC_BRAND_NAME }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          NEXT_PUBLIC_SENTRY_DSN: ${{ secrets.NEXT_PUBLIC_SENTRY_DSN }}
          CSP_REPORT_URI: ${{ secrets.CSP_REPORT_URI }}
          LICENSE_API_URL: ${{ secrets.LICENSE_API_URL }}
          MAX_FILE_SIZE_MB: ${{ secrets.MAX_FILE_SIZE_MB }}
          ALLOWED_FILE_TYPES: ${{ secrets.ALLOWED_FILE_TYPES }}
          RATE_LIMIT_REQUESTS_PER_MINUTE: ${{ secrets.RATE_LIMIT_REQUESTS_PER_MINUTE }}
          ENABLE_VOICE_INPUT: ${{ secrets.ENABLE_VOICE_INPUT }}
          ENABLE_SMS_NOTIFICATIONS: ${{ secrets.ENABLE_SMS_NOTIFICATIONS }}
          ENABLE_EMAIL_NOTIFICATIONS: ${{ secrets.ENABLE_EMAIL_NOTIFICATIONS }}
          VERCEL_MCP_TOKEN: ${{ secrets.VERCEL_MCP_TOKEN }}
          BYPASS_AUTH: ${{ secrets.BYPASS_AUTH }}
          NEXT_PUBLIC_BYPASS_AUTH: ${{ secrets.NEXT_PUBLIC_BYPASS_AUTH }}
          NEXT_PUBLIC_DEMO_MODE: ${{ secrets.NEXT_PUBLIC_DEMO_MODE }}
